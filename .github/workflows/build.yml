# DESCRIPTION: Github actions config
# This name is key to badges in README.rst, so we use the name build
# SPDX-License-Identifier: LGPL-3.0-only OR Artistic-2.0

name: build

on:
  push:
  pull_request:
  workflow_dispatch:
  schedule:
  - cron: '0 0 * * 0' # weekly

env:
  CI_OS_NAME: linux
  CI_COMMIT: ${{ github.sha }}
  CCACHE_COMPRESS: 1
  CCACHE_DIR: ${{ github.workspace }}/.ccache
  CCACHE_LIMIT_MULTIPLE: 0.90

defaults:
  run:
    shell: bash
    working-directory: repo

concurrency:
  group: ${{ github.workflow }}-${{ github.event_name == 'pull_request' && github.ref || github.run_id }}
  cancel-in-progress: true

jobs:

  build:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-22.04]
        compiler:
          - { cc: clang, cxx: clang++ }
          - { cc: gcc,   cxx: g++     }
        # m32 1 is deprecated, not here to speed up regressions
        m32: [0]
    runs-on: ${{ matrix.os }}
    name: Build | ${{ matrix.os }} | ${{ matrix.compiler.cc }} ${{ matrix.m32 && '| -m32' || '' }}
    env:
      CI_BUILD_STAGE_NAME: build
      CI_RUNS_ON: ${{ matrix.os }}
      CI_M32: ${{ matrix.m32 }}
      CC: ${{ matrix.compiler.cc }}
      CXX: ${{ matrix.compiler.cxx }}
      CACHE_BASE_KEY: build-${{ matrix.os }}-${{ matrix.compiler.cc }}-m32=${{ matrix.m32 }}
      CCACHE_MAXSIZE: 500M # Per build matrix entry (2000M in total)
      VERILATOR_ARCHIVE: verilator-${{ github.sha }}-${{ matrix.os }}-${{ matrix.compiler.cc }}${{ matrix.m32 && '-m32' || '' }}.tar.gz
    steps:

    - name: Checkout
      uses: actions/checkout@v3
      with:
        path: repo

    - name: Cache $CCACHE_DIR
      uses: actions/cache@v3
      env:
        CACHE_KEY: ${{ env.CACHE_BASE_KEY }}-ccache
      with:
        path: ${{ env.CCACHE_DIR }}
        key: ${{ env.CACHE_KEY }}-${{ github.sha }}
        restore-keys: |
          ${{ env.CACHE_KEY }}-

    - name: Install packages for build
      run: ./ci/ci-install.bash

    - name: Build
      run: ./ci/ci-script.bash

    - name: Tar up repository
      working-directory: ${{ github.workspace }}
      run: tar --posix -c -z -f ${{ env.VERILATOR_ARCHIVE }} repo

    - name: Upload tar archive
      uses: actions/upload-artifact@v3
      with:
        path: ${{ github.workspace }}/${{ env.VERILATOR_ARCHIVE }}
        name: ${{ env.VERILATOR_ARCHIVE }}


  test:
    needs: build
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-22.04]
        compiler:
          - { cc: gcc,   cxx: g++     }
        m32: [0]
        suite:
          - { name: dist-vlt, index: 0}
          - { name: dist-vlt, index: 1}
          - { name: dist-vlt, index: 2}
          - { name: dist-vlt, index: 3}
          - { name: dist-vlt, index: 4}
          - { name: dist-vlt, index: 5}
          - { name: dist-vlt, index: 6}
          - { name: dist-vlt, index: 7}
          - { name: dist-vlt, index: 8}
          - { name: vltmt, index: 0}
          - { name: vltmt, index: 1}
          - { name: vltmt, index: 2}
          - { name: vltmt, index: 3}
          - { name: vltmt, index: 4}
          - { name: vltmt, index: 5}
#        [dist-vlt-0, dist-vlt-1, dist-vlt-2, vltmt-0, vltmt-1]
    runs-on: ${{ matrix.os }}
    name: Test | ${{ matrix.os }} | ${{ matrix.compiler.cc }} | ${{ matrix.suite.name }}-${{ matrix.suite.index }} ${{ matrix.m32 && '| -m32' || '' }}
    env:
      CI_BUILD_STAGE_NAME: test
      CI_RUNS_ON: ${{ matrix.os }}
      CI_M32: ${{ matrix.m32 }}
      CC: ${{ matrix.compiler.cc }}
      CXX: ${{ matrix.compiler.cxx }}
      CACHE_BASE_KEY: test-${{ matrix.os }}-${{ matrix.compiler.cc }}-m32=${{ matrix.m32 }}-${{ matrix.suite.name }}-${{ matrix.suite.index }}
      CCACHE_MAXSIZE: 100M # Per build matrix entry (2160M in total)
      VERILATOR_ARCHIVE: verilator-${{ github.sha }}-${{ matrix.os }}-${{ matrix.compiler.cc }}${{ matrix.m32 && '-m32' || '' }}.tar.gz
    steps:

    - name: Download tar archive
      uses: actions/download-artifact@v3
      with:
        name: ${{ env.VERILATOR_ARCHIVE }}
        path: ${{ github.workspace }}

    - name: Unpack tar archive
      working-directory: ${{ github.workspace }}
      run: tar -x -z -f ${{ env.VERILATOR_ARCHIVE }}

    - name: Cache $CCACHE_DIR
      uses: actions/cache@v3
      env:
        CACHE_KEY: ${{ env.CACHE_BASE_KEY }}-ccache
      with:
        path: ${{ env.CCACHE_DIR }}
        key: ${{ env.CACHE_KEY }}-${{ github.sha }}
        restore-keys: |
          ${{ env.CACHE_KEY }}-

    - name: Install test dependencies
      run: ./ci/ci-install.bash

    - name: Test
      env:
        TESTS: ${{ matrix.suite.name }}-${{ matrix.suite.index }}
      run: ./ci/ci-script.bash
